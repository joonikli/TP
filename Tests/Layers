from cmu_graphics import *
from background import Frame, Button
from canvas import Canvas
import random, copy

def pan(app):
    print('move canvas left and right')

def zoom(app):
    print('zoom in and out')
                
def onAppStart(app):
    app.slate = Frame(app) # initial background screen 
    app.startLayer = Layer() 
    app.layers = [app.startLayer] # store all layers
    app.newFreeLine = [] # add this to layer.freeLinesList after
    app.pastel = False
    app.pencil = True
    app.straight = False
    app.colorChange = False
    app.erase = False
    app.undo = False
    app.redo = False
    app.pan = False
    app.zoom = False
    app.tools = [[app.pastel, app.pencil], 
                 [app.straight, app.colorChange], 
                 [app.erase], 
                 [app.undo, app.redo], 
                 [app.pan, app.zoom]]
    app.buttons = [] # buttons to press to switch tools above
    start = app.width/30
    for row in range(5): 
        for col in range(2):
            if (row, col) != (2, 1):
                tool = app.tools[row][col]
                button = Button(60*col+start, 60*row+10, 50, 
                                app.slate.color, app.slate.border, tool)
                app.buttons.append(button)

def onMousePress(app, mX, mY):
    # after clicking on a btton 
    # initialize that shape/line or layer
    # if button is draw pencil line, call Layer.pencilLines
    # wahtever color is selected
    for i in range(len(app.buttons)):
        currButton = app.buttons[i]
        currButton.respondToPress(mX, mY, app.startLayer) # call function to activate it
    
def onMouseDrag(app, mX, mY):
    app.newFreeLine.append((mX, mY))
    
def onMouseRelease(app, mX, mY):
    #add it to the list of items
    currLine = copy.deepcopy(app.newFreeLine)
    app.startLayer.freeLinesList.append(currLine)

def redrawAll(app):
    #resizes app bar
    app.slate.drawBg(app) #draws very background of app
    startX = app.slate.canvasW
    endX = app.slate.w - startX*2
    #draw white background for first layer (default look)
    app.startLayer.drawCanvas(app, startX, 0, endX, app.slate.h-10)


    for layer in app.layers: #appp, draw current, color 
        color = 'red'
        if app.newFreeLine != []:
            print('check free line', app.newFreeLine)
            layer.drawPencilLine(app, app.newFreeLine, color) # most current line
            # layer.drawOld(app, layer.freeLinesList, color) #2d list of points
    app.slate.drawToolBar(app)

# (app, pointList, color, opacity=100):

runApp(width=800, height=600)