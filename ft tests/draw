from cmu_graphics import *
from cmu_graphics import utils


class allLines:
    def __init__(self, app):
        self.points = app.pencilLine
        
    def drawPencilLine(self, app):
        for i in range(1, len(app.pencilLine[-1])):
            drawLine(app.pencilLine[-1][i-1][0], 
                    app.pencilLine[-1][i-1][1], 
                    app.pencilLine[-1][i][0], 
                    app.pencilLine[-1][i][1], lineWidth=app.size//2, opacity=80)
        
def onAppStart(app):
    app.cx = 50
    app.cy = 50
    app.drawing = False
    app.size = 10
    app.opacity = 100
    app.line = []
    app.steps = 0
    app.pencilLine = [[]]
    app.pencilInventory = []

def redrawAll(app):
    drawLine(50, 50, 100, 100)
    if app.drawing:
        app.pencilLine.drawPencilLine()

def drawingLines(app):

   
        # drawLine(app.line[i-1][0], app.line[i-1][1], app.line[i][0], app.line[i][1]) # i - i for horizontal flip
        drawCircle(app.cx, app.cy, app.size, fill='red', opacity=app.opacity)

def onMousePress(app, mouseX, mouseY):
    allLines(app.pencilLine)
    app.drawing = True
    app.cx = mouseX
    app.cy = mouseY

def onMouseDrag(app, mouseX, mouseY):
    app.drawing = True
    app.cx = mouseX
    app.cy = mouseY
    print(mouseX, mouseY)
    if app.steps % 3 == 0:
        app.pencilLine[-1].append((mouseX, mouseY))
    # app.line.append((mouseX, mouseY))

def onMouseRelease(app, mouseX, mouseY):
    app.pencilLine.append([])

def onStep(app):
    app.steps += 1

runApp(width=400, height=400)